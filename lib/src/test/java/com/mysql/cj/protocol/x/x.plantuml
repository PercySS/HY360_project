@startuml

title __X's Class Diagram__\n

  namespace com.mysql.cj {
    namespace protocol {
      namespace x {
        class com.mysql.cj.protocol.x.CompressionTest {
            {static} ~ data1 : byte[]
            {static} ~ data2 : byte[]
            {static} ~ downlinkCompressedMultipleFrame : byte[]
            {static} ~ downlinkCompressedSingleFrame : byte[]
            {static} ~ downlinkCompressedSingleFrame1Length : int
            {static} ~ downlinkCompressedSingleFrame2Length : int
            {static} ~ uncompressedFrame1 : byte[]
            {static} ~ uncompressedFrame2 : byte[]
            {static} ~ uplinkCompressedFrame : byte[]
            + downlinkCompressionMultipleCompressed()
            + downlinkCompressionSingleCompressed()
            + downlinkCompressionSplittingUncompressed()
            + uplinkCompressionSplitting()
        }
      }
    }
  }
  

  namespace com.mysql.cj {
    namespace protocol {
      namespace x {
        class com.mysql.cj.protocol.x.SyncMessageReaderTest {
            {static} - errMsgPacket : byte[]
            {static} - okMsgPacket : byte[]
            - reader : SyncMessageReader
            + testMappingTables()
            + testNextMessageClass()
            + testReadKnownMessageType()
            + testReadWrongMessageType()
            + testSeveralMessages()
            + testUnexpectedError()
            {static} - serializeMessage()
        }
      }
    }
  }
  

  namespace com.mysql.cj {
    namespace protocol {
      namespace x {
        class com.mysql.cj.protocol.x.SyncMessageWriterTest {
            - outputStream : ByteArrayOutputStream
            - writer : SyncMessageSender
            + setUp()
            + testBadMessageClass()
            + testCompleteWriteMessage()
            + testLastPacketSentTime()
        }
      }
    }
  }
  



right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
