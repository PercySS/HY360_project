@startuml

title __INTERNAL's Class Diagram__\n

  namespace testsuite {
    namespace x.internal {
      class testsuite.x.internal.InternalXBaseTestCase {
          + baseUrl : String
          + testHostInfo : HostInfo
          + testProperties : Properties
          {static} # DEFAULT_METADATA_CHARSET : String
          # fact : SessionFactory
          # isSetForXTests : boolean
          - mysqlVersion : ServerVersion
          + InternalXBaseTestCase()
          + createAuthenticatedTestProtocol()
          + createTempTestCollection()
          + createTestProtocol()
          + createTestSchema()
          + createTestSession()
          + dropTempTestCollection()
          + getEncodedTestHost()
          + getTestDatabase()
          + getTestHost()
          + getTestPassword()
          + getTestPort()
          + getTestUser()
          {static} # assertSessionStatusEquals()
          {static} # assertSessionStatusNotEquals()
          {static} # assertThrows()
          {static} # assertThrows()
          {static} # assertThrows()
          {static} # assertThrows()
          # isPluginActive()
          # mysqlVersionMeetsMinimum()
          # mysqlVersionMeetsMinimum()
      }
    }
  }
  

  namespace testsuite {
    namespace x.internal {
      class testsuite.x.internal.MysqlxSessionTest {
          - session : MysqlxSession
          + destroyTestSession()
          + setupTestSession()
          + testCreateDropCollection()
          + testGenericQuery()
          + testGetObjects()
          + testInterleavedResults()
      }
    }
  }
  

  namespace testsuite {
    namespace x.internal {
      class testsuite.x.internal.XProtocolAsyncTest {
          - messageBuilder : XMessageBuilder
          - protocol : XProtocol
          + destroyTestProtocol()
          + setupTestProtocol()
          + simpleSuccessfulQuery()
      }
    }
  }
  

  namespace testsuite {
    namespace x.internal {
      class testsuite.x.internal.XProtocolAsyncTest.ValueHolder {
          + accept()
          + get()
      }
    }
  }
  

  namespace testsuite {
    namespace x.internal {
      class testsuite.x.internal.XProtocolAuthTest {
          - messageBuilder : XMessageBuilder
          {static} - protocol : XProtocol
          + destroyTestProtocol()
          + setupTestProtocol()
          + testBadAuthMessage()
          + testBasicSaslMysql41Auth()
          + testBasicSaslPlainAuth()
          + testBasicSaslPlainAuthFailure()
          + testEmptyDatabaseMYSQL41()
          + testEmptyDatabasePLAIN()
      }
    }
  }
  

  namespace testsuite {
    namespace x.internal {
      class testsuite.x.internal.XProtocolTest {
          - messageBuilder : XMessageBuilder
          - protocol : XProtocol
          + destroyTestProtocol()
          + setupTestProtocol()
          + tableInsert()
          + testAnotherBasicSqlQuery()
          + testBasicCrudInsertFind()
          + testCapabilities()
          + testCreateAndDropCollection()
          + testDecodingAllTypes()
          + testDocUpdate()
          + testEnableDisableNotices()
          + testMultiInsert()
          + testResultSet()
          + testSqlDml()
          + testTrivialSqlQuery()
          + testWarnings()
      }
    }
  }
  

  testsuite.x.internal.XProtocolAsyncTest +-down- testsuite.x.internal.XProtocolAsyncTest.ValueHolder
  testsuite.x.internal.XProtocolAsyncTest.ValueHolder .up.|> java.util.function.Consumer
  testsuite.x.internal.XProtocolAsyncTest.ValueHolder .up.|> java.util.function.Supplier
  testsuite.x.internal.XProtocolAsyncTest.ValueHolder o-- T : val


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
