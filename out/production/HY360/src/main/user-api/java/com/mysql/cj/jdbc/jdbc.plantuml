@startuml

title __JDBC's Class Diagram__\n

  namespace com.mysql.cj {
    namespace jdbc {
      interface com.mysql.cj.jdbc.ClientInfoProvider {
          {abstract} + destroy()
          {abstract} + getClientInfo()
          {abstract} + getClientInfo()
          {abstract} + initialize()
          {abstract} + setClientInfo()
          {abstract} + setClientInfo()
      }
    }
  }
  

  namespace com.mysql.cj {
    namespace jdbc {
      enum CloseOption {
        FORCED
        IMPLICIT
        NO_CACHE
        PROPAGATE
        ROLLBACK
      }
    }
  }
  

  namespace com.mysql.cj {
    namespace jdbc {
      interface com.mysql.cj.jdbc.JdbcConnection {
          {abstract} + abortInternal()
          {abstract} + changeUser()
          {abstract} + clientPrepareStatement()
          {abstract} + clientPrepareStatement()
          {abstract} + clientPrepareStatement()
          {abstract} + clientPrepareStatement()
          {abstract} + clientPrepareStatement()
          {abstract} + clientPrepareStatement()
          {abstract} + decachePreparedStatement()
          {abstract} + doClose()
          {abstract} + getActiveMySQLConnection()
          {abstract} + getActiveStatementCount()
          {abstract} + getAutoIncrementIncrement()
          {abstract} + getCachedMetaData()
          {abstract} + getCharacterSetMetadata()
          {abstract} + getClientInfoProviderImpl()
          {abstract} + getDatabase()
          {abstract} + getHost()
          {abstract} + getHostPortPair()
          {abstract} + getIdleFor()
          {abstract} + getLock()
          {abstract} + getMetadataSafeStatement()
          {abstract} + getMultiHostParentProxy()
          {abstract} + getMultiHostSafeProxy()
          {abstract} + getPropertySet()
          {abstract} + getQueryInterceptorsInstances()
          {abstract} + getServerVersion()
          {abstract} + getSessionMaxRows()
          {abstract} + getStatementComment()
          {abstract} + hasSameProperties()
          {abstract} + initializeResultsMetadataFromCache()
          {abstract} + initializeSafeQueryInterceptors()
          {abstract} + isInGlobalTx()
          {abstract} + isProxySet()
          {abstract} + isReadOnly()
          {abstract} + isSameResource()
          {abstract} + isServerLocal()
          {abstract} + isSourceConnection()
          {abstract} + lowerCaseTableNames()
          {abstract} + ping()
          {abstract} + pingInternal()
          {abstract} + recachePreparedStatement()
          {abstract} + registerStatement()
          {abstract} + resetServerState()
          {abstract} + serverPrepareStatement()
          {abstract} + serverPrepareStatement()
          {abstract} + serverPrepareStatement()
          {abstract} + serverPrepareStatement()
          {abstract} + serverPrepareStatement()
          {abstract} + serverPrepareStatement()
          {abstract} + setDatabase()
          {abstract} + setFailedOver()
          {abstract} + setInGlobalTx()
          {abstract} + setProxy()
          {abstract} + setReadOnlyInternal()
          {abstract} + setSessionMaxRows()
          {abstract} + setStatementComment()
          {abstract} + shutdownServer()
          {abstract} + storesLowerCaseTableName()
          {abstract} + throwConnectionClosedException()
          {abstract} + unSafeQueryInterceptors()
          {abstract} + unregisterStatement()
      }
    }
  }
  

  namespace com.mysql.cj {
    namespace jdbc {
      interface com.mysql.cj.jdbc.JdbcPreparedStatement {
          {abstract} + getBytesRepresentation()
          {abstract} + getParameterBindings()
          {abstract} + getPreparedSql()
          {abstract} + getQueryBindings()
          {abstract} + getQueryInfo()
          {abstract} + isNull()
          {abstract} + setBigInteger()
          {abstract} + setBytes()
          {abstract} + setNull()
      }
    }
  }
  

  namespace com.mysql.cj {
    namespace jdbc {
      interface com.mysql.cj.jdbc.JdbcPropertySet {
          {abstract} + exposeAsDriverPropertyInfo()
      }
    }
  }
  

  namespace com.mysql.cj {
    namespace jdbc {
      interface com.mysql.cj.jdbc.JdbcStatement {
          {static} + MAX_ROWS : int
          {abstract} + clearAttributes()
          {abstract} + disableStreamingResults()
          {abstract} + doClose()
          {abstract} + enableStreamingResults()
          {abstract} + getExceptionInterceptor()
          {abstract} + getLocalInfileInputStream()
          {abstract} + getOpenResultSetCount()
          {abstract} + getQuery()
          {abstract} + getResultSetInternal()
          {abstract} + notifyResultSetClose()
          {abstract} + setAttribute()
          {abstract} + setHoldResultsOpenOverClose()
          {abstract} + setLocalInfileInputStream()
          {abstract} + setPingTarget()
      }
    }
  }
  

  namespace com.mysql.cj {
    namespace jdbc {
      interface com.mysql.cj.jdbc.ParameterBindings {
          {abstract} + getArray()
          {abstract} + getAsciiStream()
          {abstract} + getBigDecimal()
          {abstract} + getBigInteger()
          {abstract} + getBinaryStream()
          {abstract} + getBlob()
          {abstract} + getBoolean()
          {abstract} + getByte()
          {abstract} + getBytes()
          {abstract} + getCharacterStream()
          {abstract} + getClob()
          {abstract} + getDate()
          {abstract} + getDouble()
          {abstract} + getFloat()
          {abstract} + getInt()
          {abstract} + getLong()
          {abstract} + getNCharacterStream()
          {abstract} + getNClob()
          {abstract} + getObject()
          {abstract} + getRef()
          {abstract} + getShort()
          {abstract} + getString()
          {abstract} + getTime()
          {abstract} + getTimestamp()
          {abstract} + getURL()
          {abstract} + isNull()
      }
    }
  }
  



right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
