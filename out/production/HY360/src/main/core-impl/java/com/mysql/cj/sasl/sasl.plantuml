@startuml

title __SASL's Class Diagram__\n

  namespace com.mysql.cj {
    namespace sasl {
      class com.mysql.cj.sasl.ScramSha1SaslClient {
          {static} + IANA_MECHANISM_NAME : String
          {static} + MECHANISM_NAME : String
          {static} - HMAC_SHA1_ALGORITHM : String
          {static} - PBKCF2_HMAC_SHA1_ALGORITHM : String
          {static} - SHA1_ALGORITHM : String
          {static} - SHA1_HASH_LENGTH : int
          + ScramSha1SaslClient()
          + getMechanismName()
          ~ getIanaMechanismName()
          ~ h()
          ~ hi()
          ~ hmac()
      }
    }
  }
  

  namespace com.mysql.cj {
    namespace sasl {
      class com.mysql.cj.sasl.ScramSha256SaslClient {
          {static} + IANA_MECHANISM_NAME : String
          {static} + MECHANISM_NAME : String
          {static} - HMAC_SHA256_ALGORITHM : String
          {static} - PBKCF2_HMAC_SHA256_ALGORITHM : String
          {static} - SHA256_ALGORITHM : String
          {static} - SHA256_HASH_LENGTH : int
          + ScramSha256SaslClient()
          + getMechanismName()
          ~ getIanaMechanismName()
          ~ h()
          ~ hi()
          ~ hmac()
      }
    }
  }
  

  namespace com.mysql.cj {
    namespace sasl {
      abstract class com.mysql.cj.sasl.ScramShaSaslClient {
          {static} # CLIENT_KEY : byte[]
          {static} # GS2_CBIND_FLAG : String
          {static} # MINIMUM_ITERATIONS : int
          {static} # SERVER_KEY : byte[]
          # authenticationId : String
          # authorizationId : String
          # cNonce : String
          # clientFirstMessageBare : String
          # gs2Header : String
          # password : String
          # serverSignature : byte[]
          + ScramShaSaslClient()
          + dispose()
          + evaluateChallenge()
          + getNegotiatedProperty()
          + hasInitialResponse()
          + isComplete()
          + unwrap()
          + wrap()
          {abstract} ~ getIanaMechanismName()
          {abstract} ~ h()
          {abstract} ~ hi()
          {abstract} ~ hmac()
          ~ xorInPlace()
          - generateRandomPrintableAsciiString()
          - parseChallenge()
          - prepUserName()
      }
    }
  }
  

  namespace com.mysql.cj {
    namespace sasl {
      enum ScramExchangeStage {
        CLIENT_FIRST
        SERVER_FINAL
        SERVER_FIRST_CLIENT_FINAL
        TERMINATED
        next
      }
    }
  }
  

  namespace com.mysql.cj {
    namespace sasl {
      class com.mysql.cj.sasl.ScramShaSaslClientFactory {
          {static} - SUPPORTED_MECHANISMS : String[]
          + createSaslClient()
          + getMechanismNames()
          - getPassword()
          - getUsername()
      }
    }
  }
  

  namespace com.mysql.cj {
    namespace sasl {
      class com.mysql.cj.sasl.ScramShaSaslProvider {
          {static} - INFO : String
          {static} - serialVersionUID : long
          + ScramShaSaslProvider()
      }
    }
  }
  

  namespace com.mysql.cj {
    namespace sasl {
      class com.mysql.cj.sasl.ScramShaSaslProvider.ProviderService {
          + ProviderService()
          + newInstance()
      }
    }
  }
  

  com.mysql.cj.sasl.ScramSha1SaslClient -up-|> com.mysql.cj.sasl.ScramShaSaslClient
  com.mysql.cj.sasl.ScramSha256SaslClient -up-|> com.mysql.cj.sasl.ScramShaSaslClient
  com.mysql.cj.sasl.ScramShaSaslClient .up.|> javax.security.sasl.SaslClient
  com.mysql.cj.sasl.ScramShaSaslClient o-- com.mysql.cj.sasl.ScramShaSaslClient.ScramExchangeStage : scramStage
  com.mysql.cj.sasl.ScramShaSaslClient +-down- com.mysql.cj.sasl.ScramShaSaslClient.ScramExchangeStage
  com.mysql.cj.sasl.ScramShaSaslClient.ScramExchangeStage o-- com.mysql.cj.sasl.ScramShaSaslClient.ScramExchangeStage : next
  com.mysql.cj.sasl.ScramShaSaslClientFactory .up.|> javax.security.sasl.SaslClientFactory
  com.mysql.cj.sasl.ScramShaSaslProvider -up-|> java.security.Provider
  com.mysql.cj.sasl.ScramShaSaslProvider +-down- com.mysql.cj.sasl.ScramShaSaslProvider.ProviderService
  com.mysql.cj.sasl.ScramShaSaslProvider.ProviderService -up-|> java.security.Provider.Service


right footer


PlantUML diagram generated by SketchIt! (https://bitbucket.org/pmesmeur/sketch.it)
For more information about this tool, please contact philippe.mesmeur@gmail.com
endfooter

@enduml
